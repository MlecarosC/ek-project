services:
  # Servicio Eureka Server
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    restart: always
    ports:
      - "8761:8761"
    networks:
      - eureka-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  # Servicio de Base de Datos MySQL
  mysql:
    image: mysql:8.0
    container_name: eureka-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: eureka-project-db
      MYSQL_USER: eureka_user
      MYSQL_PASSWORD: eureka_pass
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./api-service/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./api-service/src/main/resources/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      - eureka-network
    healthcheck:
      test: ["CMD", "mysql", "-u", "eureka_user", "-peureka_pass", "-e", "SELECT 1 FROM candidatos LIMIT 1;", "eureka-project-db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  # Servicio de la API Spring Boot
  api:
    build:
      context: ./api-service
      dockerfile: Dockerfile
    container_name: eureka-api
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/eureka-project-db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: eureka_user
      SPRING_DATASOURCE_PASSWORD: eureka_pass
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_SQL_INIT_MODE: never
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_HOSTNAME: api
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      # Reintentos de conexi√≥n a Eureka
      EUREKA_CLIENT_REGISTRY_FETCH_INTERVAL_SECONDS: 5
      EUREKA_CLIENT_INITIAL_INSTANCE_INFO_REPLICATION_INTERVAL_SECONDS: 5
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - eureka-network

volumes:
  mysql_data:

networks:
  eureka-network:
    driver: bridge
