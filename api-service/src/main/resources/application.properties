spring.application.name=api-service

# Configuración de Base de Datos
# Estas propiedades serán sobrescritas por las variables de entorno en Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/eureka-project-db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración de JPA/Hibernate
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Script SQL init (desactivado en Docker, activo en local)
spring.sql.init.mode=${SPRING_SQL_INIT_MODE:always}
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# Configuración de Eureka Client
# Configuración de Eureka Client
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:localhost}

# Configuración de salud para Eureka
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
